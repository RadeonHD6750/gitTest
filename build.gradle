plugins {
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'java'
	id 'war'
}

group = 'com.jimin'
version = '0.1'
sourceCompatibility = '17'
apply plugin: 'war'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-tomcat
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	providedCompile 'org.apache.tomcat.embed:tomcat-embed-jasper'

	// https://mvnrepository.com/artifact/javax.servlet/jstl
	implementation group: 'javax.servlet', name: 'jstl', version: '1.2'

	implementation 'org.springframework.boot:spring-boot-starter-web'



	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-integration'

	implementation 'org.springframework.integration:spring-integration-mqtt'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
	compileOnly 'org.projectlombok:lombok'
	//implementation 'org.springframework.boot:spring-boot-devtools'
	//runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'
    // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc11
	implementation 'com.oracle.database.jdbc:ojdbc11:23.2.0.0'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//xml Î∞è JSON
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'javax.activation:activation:1.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.0'

}

println "### project.projectDir: ${project.projectDir}"

task deleteVueBuildFiles(type: Delete) {
	delete "${projectDir}/src/main/resources/static"
	delete "${projectDir}/build/resources/main/static"
}


tasks.named('test') {
	useJUnitPlatform()
}

bootWar{
	archiveBaseName = "ROOT"
	archiveFileName = "ROOT.war"
}
